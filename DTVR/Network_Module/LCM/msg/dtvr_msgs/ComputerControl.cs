/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace dtvr_msgs
{
    public sealed class ComputerControl : LCM.LCM.LCMEncodable
    {
        public bool IsClose;
 
        public ComputerControl()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0xf555f6724c21182bL;
 
        static ComputerControl()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("dtvr_msgs.ComputerControl"))
                return 0L;
 
            classes.Add("dtvr_msgs.ComputerControl");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.IsClose); 
 
        }
 
        public ComputerControl(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public ComputerControl(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static dtvr_msgs.ComputerControl _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            dtvr_msgs.ComputerControl o = new dtvr_msgs.ComputerControl();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.IsClose = ins.ReadBoolean();
 
        }
 
        public dtvr_msgs.ComputerControl Copy()
        {
            dtvr_msgs.ComputerControl outobj = new dtvr_msgs.ComputerControl();
            outobj.IsClose = this.IsClose;
 
            return outobj;
        }
    }
}

