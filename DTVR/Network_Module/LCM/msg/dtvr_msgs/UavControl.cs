/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace dtvr_msgs
{
    public sealed class UavControl : LCM.LCM.LCMEncodable
    {
        public byte Mode;
        public double ComLX;
        public double ComLY;
        public double ComLZ;
        public double ComAX;
        public double ComAY;
        public double ComAZ;
 
        public UavControl()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x523f417f74763960L;
 
        static UavControl()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("dtvr_msgs.UavControl"))
                return 0L;
 
            classes.Add("dtvr_msgs.UavControl");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.Mode); 
 
            outs.Write(this.ComLX); 
 
            outs.Write(this.ComLY); 
 
            outs.Write(this.ComLZ); 
 
            outs.Write(this.ComAX); 
 
            outs.Write(this.ComAY); 
 
            outs.Write(this.ComAZ); 
 
        }
 
        public UavControl(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public UavControl(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static dtvr_msgs.UavControl _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            dtvr_msgs.UavControl o = new dtvr_msgs.UavControl();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.Mode = ins.ReadByte();
 
            this.ComLX = ins.ReadDouble();
 
            this.ComLY = ins.ReadDouble();
 
            this.ComLZ = ins.ReadDouble();
 
            this.ComAX = ins.ReadDouble();
 
            this.ComAY = ins.ReadDouble();
 
            this.ComAZ = ins.ReadDouble();
 
        }
 
        public dtvr_msgs.UavControl Copy()
        {
            dtvr_msgs.UavControl outobj = new dtvr_msgs.UavControl();
            outobj.Mode = this.Mode;
 
            outobj.ComLX = this.ComLX;
 
            outobj.ComLY = this.ComLY;
 
            outobj.ComLZ = this.ComLZ;
 
            outobj.ComAX = this.ComAX;
 
            outobj.ComAY = this.ComAY;
 
            outobj.ComAZ = this.ComAZ;
 
            return outobj;
        }
    }
}

