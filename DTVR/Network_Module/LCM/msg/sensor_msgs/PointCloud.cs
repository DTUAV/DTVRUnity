/* LCM type definition class file
 * This file was automatically generated by lcm-gen
 * DO NOT MODIFY BY HAND!!!!
 */

using System;
using System.Collections.Generic;
using System.IO;
using LCM.LCM;
 
namespace sensor_msgs
{
    public sealed class PointCloud : LCM.LCM.LCMEncodable
    {
        public int num;
        public double[] x;
        public double[] y;
        public double[] z;
 
        public PointCloud()
        {
        }
 
        public static readonly ulong LCM_FINGERPRINT;
        public static readonly ulong LCM_FINGERPRINT_BASE = 0x3b0b498cac767ccdL;
 
        static PointCloud()
        {
            LCM_FINGERPRINT = _hashRecursive(new List<String>());
        }
 
        public static ulong _hashRecursive(List<String> classes)
        {
            if (classes.Contains("sensor_msgs.PointCloud"))
                return 0L;
 
            classes.Add("sensor_msgs.PointCloud");
            ulong hash = LCM_FINGERPRINT_BASE
                ;
            classes.RemoveAt(classes.Count - 1);
            return (hash<<1) + ((hash>>63)&1);
        }
 
        public void Encode(LCMDataOutputStream outs)
        {
            outs.Write((long) LCM_FINGERPRINT);
            _encodeRecursive(outs);
        }
 
        public void _encodeRecursive(LCMDataOutputStream outs)
        {
            outs.Write(this.num); 
 
            for (int a = 0; a < this.num; a++) {
                outs.Write(this.x[a]); 
            }
 
            for (int a = 0; a < this.num; a++) {
                outs.Write(this.y[a]); 
            }
 
            for (int a = 0; a < this.num; a++) {
                outs.Write(this.z[a]); 
            }
 
        }
 
        public PointCloud(byte[] data) : this(new LCMDataInputStream(data))
        {
        }
 
        public PointCloud(LCMDataInputStream ins)
        {
            if ((ulong) ins.ReadInt64() != LCM_FINGERPRINT)
                throw new System.IO.IOException("LCM Decode error: bad fingerprint");
 
            _decodeRecursive(ins);
        }
 
        public static sensor_msgs.PointCloud _decodeRecursiveFactory(LCMDataInputStream ins)
        {
            sensor_msgs.PointCloud o = new sensor_msgs.PointCloud();
            o._decodeRecursive(ins);
            return o;
        }
 
        public void _decodeRecursive(LCMDataInputStream ins)
        {
            this.num = ins.ReadInt32();
 
            this.x = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                this.x[a] = ins.ReadDouble();
            }
 
            this.y = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                this.y[a] = ins.ReadDouble();
            }
 
            this.z = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                this.z[a] = ins.ReadDouble();
            }
 
        }
 
        public sensor_msgs.PointCloud Copy()
        {
            sensor_msgs.PointCloud outobj = new sensor_msgs.PointCloud();
            outobj.num = this.num;
 
            outobj.x = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                outobj.x[a] = this.x[a];
            }
 
            outobj.y = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                outobj.y[a] = this.y[a];
            }
 
            outobj.z = new double[(int) num];
            for (int a = 0; a < this.num; a++) {
                outobj.z[a] = this.z[a];
            }
 
            return outobj;
        }
    }
}

